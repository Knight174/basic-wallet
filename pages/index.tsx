import { ConnectButton } from '@rainbow-me/rainbowkit';
import type { NextPage } from 'next';
import Head from 'next/head';
import styles from '../styles/Home.module.css';
import {
  UseAccountReturnType,
  useAccount,
  UseBalanceReturnType,
  useBalance,
  useEnsName,
} from 'wagmi';

import { formatEther } from 'viem';

const Home: NextPage = () => {
  const account: UseAccountReturnType = useAccount();

  const shortenAddr = (address: `0x${string}`) =>
    address?.slice(0, 4) + '...' + address?.slice(-4);

  const { isLoading, data } = useBalance({
    address: account.address,
  });

  const result = useEnsName({
    address: '0x00E5F7a306DfD157740d24BfC40b749313d8D110',
  });
  console.log(result); // 挂起，请求不到

  if (isLoading) return <>Loading...</>;

  return (
    <div className={styles.container}>
      <Head>
        <title>RainbowKit App</title>
        <meta
          content="Generated by @rainbow-me/create-rainbowkit"
          name="description"
        />
        <link href="/favicon.ico" rel="icon" />
      </Head>

      <main className={styles.main}>
        <ConnectButton />
        <section>
          <h3>Account 相关</h3>
          <p>连接状态：{account.status}</p>
          <p>连接地址：{shortenAddr(account.address!)}</p>
          <p>chainId {account.chainId}</p>
          <p>connector.name {account.connector?.name}</p>
          <p>connector.id {account.connector?.id}</p>
        </section>

        <section>
          <h3>Balance 相关</h3>
          <p>
            余额：
            {data?.value ? formatEther(data.value) + ' ' + data?.symbol : '🈚️'}
          </p>
        </section>

        <section>
          <h3></h3>
        </section>
      </main>

      <footer className={styles.footer}>
        <a href="https://rainbow.me" rel="noopener noreferrer" target="_blank">
          Made with ❤️ by your frens at 🌈
        </a>
      </footer>
    </div>
  );
};

export default Home;
